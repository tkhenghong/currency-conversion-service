# Server name
spring.application.name=currency-conversion-service
# Server port, following convention of https://github.com/in28minutes/spring-microservices/tree/master/03.microservices
server.port=8100

# URL of using the Ribbon client
currency-exchange-service.ribbon.listOfServers=http://localhost:8000,http://localhost:8001,http://localhost:8002,,http://localhost:8003

# If you keep spamming the URL http://localhost:8100/currency-converter-feign/from/USD/to/INR/quantity/1000,
# {
#id: 10001,
#from: "USD",
#to: "INR",
#conversionMultiple: 65,
#quantity: 199,
#totalCalculatedAmount: 12935,
#port: 8003
#}
# The port value will change, indicating it will choose different servers to call (Now I know why it is called client side load balancing)
# If server side, the list of servers will be either statically or dynamically written in another Spring Boot project

# Configure the url of Eureka naming server
eureka.client.service-url.default-zone=http://localhost:8761/eureka
